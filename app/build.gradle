apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin
//def config = rootProject.extensions.getByName("ext")
//打包时间
static def releaseTime() {
    return new Date().format("yyyy-MM-dd HH_mm_ss", TimeZone.getDefault())
}
//获取local.properties的内容
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    compileSdkVersion ANDROID_COMPILE_SDK_VERSION
    buildToolsVersion ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "com.style.framework"
        minSdkVersion ANDROID_MIN_SDK_VERSION
        targetSdkVersion ANDROID_TARGET_SDK_VERSION
        versionCode 2
        versionName '1.0'
        multiDexEnabled true //突破应用方法数65535的一个限制
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //默认渠道,按渠道首字母排序第一个
        //manifestPlaceholders = [ENVIRONMENT: "UMENG_CHANNEL"]
        /*externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions"
            }
        }*/
        /*  ndk {
            moduleName "helloNDK"
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a"
        }*/

    }
    signingConfigs {
        debug {
            storeFile file(properties.getProperty("STORE_FILE_DEBUG"))
            /*storePassword properties.getProperty("STORE_PASSWORD")
               keyAlias project.KEY_ALIAS
                keyPassword project.KEY_PASSWORD*/
            v2SigningEnabled false

        }
        release {
            //郁闷手写就报错，在工程结构里配置就没问题，一模一样的写法
            storeFile file(properties.getProperty("STORE_FILE"))
            storePassword properties.getProperty("STORE_PASSWORD")
            keyAlias properties.getProperty("KEY_ALIAS")
            keyPassword properties.getProperty("KEY_PASSWORD")
            v2SigningEnabled false

        }
    }

    //改成如下配置,问题解决
    /* flavorDimensions "tier"//新增的,值是数组
    productFlavors {
        //_xiaomi { dimension "tier" }
        //_360 {dimension "tier"}
        //_baidu { dimension "tier" }
        _wandoujia { dimension "tier" }
    }

   productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [ENVIRONMENT: name]
    }*/
    // 多渠道 的不同配置
    flavorDimensions "default"
    productFlavors {
        _wandoujia {
            manifestPlaceholders = [ENVIRONMENT: "health"]
            /*          ,
                                              app_name   : "@string/app_name",
                                              app_icon   : "@mipmap/ic_launcher"]*/
        }
        /* wxzn {
             manifestPlaceholders = [ENVIRONMENT: "remote_wxzn",
                                     app_name   : "@string/app_name_wxzn",
                                     app_icon   : "@mipmap/ic_launcher_wxzn"]
         }*/
    }
    android.applicationVariants.all { variant ->    //批量修改Apk名字
        variant.outputs.all { output ->
            //if (!variant.buildType.isDebuggable()) {
            //获取签名的名字 variant.signingConfig.name
            //要被替换的源字符串
            def sourceFile = "app-${variant.flavorName}-${variant.buildType.name}"
            //替换的字符串
            def replaceFile = "${variant.flavorName}_v${variant.versionName}_${variant.buildType.name}_${releaseTime()}"
            outputFileName = output.outputFile.name.replace(sourceFile, replaceFile)
            //遗留问题：如何获取当前module的name，如CodeBooke这个名字怎么获取到
            // }
        }
    }
    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            jniDebuggable true
            minifyEnabled false
            zipAlignEnabled false
            //慎用，导致很多未知错误
            shrinkResources false
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    lintOptions {
        //  true--所有正式版构建执行规则生成崩溃的lint检查，如果有崩溃问题将停止构建
        checkReleaseBuilds true
        // true--错误发生后停止gradle构建
        abortOnError true
    }

    dataBinding {
        enabled = true
    }
  /*  externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }*/

}

dependencies {
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //compile 'com.android.support:appcompat-v7:27.+'
    compile "com.android.support:appcompat-v7:$ANDROID_SUPPORT_VERSION"
    compile "com.android.support:cardview-v7:$ANDROID_SUPPORT_VERSION"
    compile "com.android.support:design:$ANDROID_SUPPORT_VERSION"
    compile "com.android.support:recyclerview-v7:$ANDROID_SUPPORT_VERSION"
    testCompile 'junit:junit:4.12'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:multidex:1.0.0'
    compile 'com.alibaba:fastjson:1.1.54.android'
    compile 'io.reactivex.rxjava2:rxjava:2.1.3'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    compile 'com.squareup.retrofit2:converter-scalars:2.0.0'
    compile 'org.simple:androideventbus:1.0.5.1'
    compile 'org.greenrobot:greendao:3.2.2'
    compile 'com.google.dagger:dagger:2.4'
    compile 'android.arch.lifecycle:extensions:1.1.0'
    //java注解
    compile 'org.glassfish:javax.annotation:10.0-b28'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.4'
    implementation 'com.github.bumptech.glide:glide:4.5.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.5.0'
    compile 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    compile('com.alibaba.android:vlayout:1.2.8@aar') {
        transitive = true
    }
    //compile fileTree(dir: 'libs', include: ['*.jar'])
    compile files('libs/pinyin4j-2.5.0.jar')
    //compile 'com.belerweb:pinyin4j:2.5.1'
    /*compile files('libs/ksoap2-android-assembly-3.6.2-jar-with-dependencies.jar') {
                        exclude group: 'com.squareup.okhttp3',  module: 'okhttp'
                    }*/
    //compile 'com.jakewharton:butterknife:7.0.1'
    compile project(':mediapicker')
    compile project(':libVideoRecord')
    compile project(':libWheelDialog')
}
greendao {
    schemaVersion 1
    daoPackage 'example.greendao.dao'
    targetGenDir 'src/main/java'
}